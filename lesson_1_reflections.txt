为什么diff可以快速定位bug?
1. 可以迅速找出两个版本间的不同之处


能轻松访问历史记录如何提高编程效率？
1. 了解自己的思维演变过程
2. 后续工作做错了，可以回到某一步重新开始解决。
3. 在多人协作状态下，可以查阅每个人对工作的变更

手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本
（如 Google Docs 所做的那样）各有何优缺点？
--手动提交更灵活，可以保证每次提交都属于同一类逻辑更改，
但会产生人为的错误，比如忘记提交。

何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，
而其他系统（例如 Google Docs）单独对待每个文件？
--因为大多数代码需要在多个文件或多个类型文件中进行调用，一个文件
改变了另一个文件必须相应改变才能保证代码的正常工作。

如何使用命令 git log 和 git diff 来查看文件的历史记录？
--use git log to find the content we want, and use 'git diff' to 
check the difference between the commit with the previous one.

使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
--使用“git checkout”快速回到先前的版本，通过“git diff” 
找到问题出在哪里。

现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
--记录代码的变更， 记录工作文档的变更

some change
